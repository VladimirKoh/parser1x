from telethon import TelegramClient, events, sync, connection
import pygame
import requests
import time
import os


#telethon-----
api_id = 25026218 # –¢—É—Ç —É–∫–∞–∂–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω—ã–π —Ä–∞–Ω–µ–µ api
api_hash = '35e2d83fc7ca77eb48d3200917ae85f0' # –¢—É—Ç —É–∫–∞–∂–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω—ã–π —Ä–∞–Ω–µ–µ hash
#-------------

count = 0 # –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–µ–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π (–∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏.//////)
time_ozhidaniya = 5     #–≤—Ä–µ–º—è —á–µ—Ä–µ–∑ –∫–æ—Ç–æ—Ä–æ–µ –¥–µ–ª–∞–µ—Ç—Å—è –Ω–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –¥–∂—Å–æ–Ω–∞
list_minute = [16, 17, 18, 19, 36, 37, 38, 39] # –∫–∞–∫–∏–µ –º–∏–Ω—É—Ç—ã –º–æ–Ω–∏—Ç–æ—Ä–∏—Ç
uslovie_number = int(input('–í—ã–±–µ—Ä–µ—Ç–µ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã\n(0 - –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ + –ª—é–±–æ–µ –≤—Ä–µ–º—è, 1 - –û—Å–Ω–æ–≤–Ω–æ–µ, 2 - –≤—Å–µ –∏–≥—Ä—ã)')) #–≤—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞ —Ä–∞–±–æ—Ç—ã –ø—Ä–æ–≥—Ä–∞–º–º—ã 
# (0. –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ + –ª—é–±–æ–µ –≤—Ä–µ–º—è)
# (1. –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ + –Ω—É–∂–Ω–æ–µ –≤—Ä–µ–º—è) --- –æ—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–∂–∏–º
# (2. –í—Å–µ –∏–≥—Ä—ã)

def get_ice_hockey_all_json():
    params = {
        'sports': '2',
        'count': '50',
        'antisports': '188',
        'mode': '4',
        'country': '1',
        'partner': '51',
        'getEmpty': 'true',
        'noFilterBlockEvent': 'true',
    }
    response = requests.get('https://1xstavka.ru/LiveFeed/Get1x2_VZip', params=params)
    return response.json()


def return_time_minute_second_round(second):
    minute = second // 60
    seconds = second % 60
    return f"{str(minute).rjust(2, '0')}:{str(seconds).rjust(2, '0')}"

def get_minute(second):
    minute = second // 60
    return minute

def return_time_in_list_minute(second):
    minute = second // 60
    return minute in list_minute


def match_selection(json_data):
    result_fun = ''
    for matchs in json_data['Value']:
        row_bolshinstva = matchs['SC'].get('I', '–ù–∏—á–µ–≥–æ')
        time_round = int(matchs['SC'].get('TS', 0))
        nalichie_bolshinstva = row_bolshinstva if '–±–æ–ª—å—à–∏–Ω—Å—Ç–≤–µ' in row_bolshinstva else None
        availability_time_in_list_minute = return_time_in_list_minute(time_round)

        uslovie = [(nalichie_bolshinstva != None and ('–Ω–∞—á–∞–ª–∞' or '–ú–∞—Ç—á') not in nalichie_bolshinstva) and get_minute(time_round) > 1, 
        nalichie_bolshinstva is not None and availability_time_in_list_minute, 
        get_minute(time_round) > 1]

        if uslovie[uslovie_number]:
            name_liga = matchs['L']
            time = return_time_minute_second_round(time_round)
            score_periods = ""
            for i in matchs['SC']['PS']: # –°—á–µ—Ç –≤ –ø–µ—Ä–∏–æ–¥–∞—Ö!
                result_period = list(i.values())[-1]
                score_periods += f"({result_period.get('S1', 0)}-{result_period.get('S2', 0)})"
            result_fun += f"{name_liga}\nüëâ{nalichie_bolshinstva}\n{score_periods}{time}\n\n"

    return result_fun

# print(match_selection(get_ice_hockey_all_json()))        


with TelegramClient('my', api_id, api_hash) as client:

    while True:
        for i in client.iter_messages('@hockey_strategy', limit=1):
            last_message = i     #id, message

        count += 1
        print(count)
        result_function = match_selection(get_ice_hockey_all_json())
        if result_function != '':
            if len(last_message.message) + 2 == len(result_function):
                try:
                    client.edit_message('@hockey_strategy', message=last_message.id, text=result_function)
                except:
                    print('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ')
                    time_ozhidaniya = 3
            else:   
                client.send_message('@hockey_strategy', message=result_function)
        time.sleep(time_ozhidaniya)
        os.system('clear')





#       —Ç–µ—Å—Ç–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–∏–Ω—Ç–æ–≤

# def get_data_print(json_data):
#     for i in json_data['Value']:
#         print(i['L']) #–Ω–∞–∑–≤–∞–Ω–∏–µ –õ–ò–ì–ò
#         print(i['O1']) #–Ω–∞–∑–≤–∞–Ω–∏–µ 1 –∫–æ–º–∞–Ω–¥—ã
#         print(i['O2']) #–Ω–∞–∑–≤–∞–Ω–∏–µ 2 –∫–æ–º–∞–Ω–¥—ã
#         print(i['SC'].get('I', '–ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ –Ω–µ—Ç')) #–ù–∞–ª–∏—á–∏–µ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞!
#         print(list(i['SC']['FS'].values())) #—Å—á–µ—Ç –∫–æ–º–∞–Ω–¥
#         time_round = int(i['SC']['TS']) # –≤—Ä–µ–º—è –∏–≥—Ä—ã
#         print(get_time_all_ice_hockey(time_round))
#         for i in i['SC']['PS']: # –°—á–µ—Ç –≤ –ø–µ—Ä–∏–æ–¥–∞—Ö!
#             result_period = list(i.values())[-1]
#             print(f"({result_period.get('S1', 0)}-{result_period.get('S2', 0)})", end=' ')
#         break

# get_data_print(get_ice_hockey_all_json())